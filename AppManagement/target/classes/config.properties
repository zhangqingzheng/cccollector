#====================================================================================
# \u5e94\u7528\u8bbe\u7f6e
#   platformBundleId                 : \u5e73\u53f0\u6807\u8bc6\u7b26
#   imageMagickPath                  : ImageMagick\u547d\u4ee4\u8def\u5f84
#====================================================================================
platformBundleId=com.cccollector.appmanagement
imageMagickPath=C:\\USETOOL\\imageMagic\\ImageMagick-7.0.4-Q16
#====================================================================================
# \u8def\u5f84\u8bbe\u7f6e
#   paths.tomcatDataPath             : Tomcat \u6570\u636e\u76ee\u5f55
#   paths.nginxDataPath              : nginx \u6570\u636e\u76ee\u5f55
#   paths.caCertificates             : \u8bc1\u4e66\u9881\u53d1\u673a\u6784\u8def\u5f84
#   paths.clientCertificates         : \u5ba2\u6237\u7aef\u8bc1\u4e66\u8def\u5f84
#   paths.webAppRootKey              : \u5e94\u7528\u6839\u8def\u5f84\u952e
#   paths.webtemp                    : \u4e34\u65f6\u8def\u5f84
#   paths.image                      : \u56fe\u50cf\u8def\u5f84
#   paths.publish                    : \u53d1\u5e03\u8def\u5f84
#   paths.thumbnailUrl               : \u7f29\u7565\u56feURL
#====================================================================================
paths.tomcatDataPath=C:\\export\\tomcat\\
paths.nginxDataPath=C:\\export\\nginx\\
paths.caCertificates=caCertificates
paths.clientCertificates=clientCertificates
paths.webAppRootKey=appManagement.webAppRoot
paths.webTemp=temp
paths.image=image
paths.publish=publish
paths.thumbnailUrl=https://localhostapp/img/
#====================================================================================
# \u8bc1\u4e66\u8bbe\u7f6e
#   certificate.rootValidDays        : \u6839\u8bc1\u4e66\u6709\u6548\u5929\u6570
#   certificate.rootCreateCommand    : \u6839\u8bc1\u4e66\u521b\u5efa\u547d\u4ee4
#   certificate.validDays            : \u8bc1\u4e66\u6709\u6548\u5929\u6570
#   certificate.createCommand    	: \u8bc1\u4e66\u521b\u5efa\u547d\u4ee4
#====================================================================================
certificate.rootValidDays=3650
certificate.rootCreateCommand=&& mkdir @{runtime.certificate.rootCertificatePath} && cd C:\\openSSLTest2 && set RANDFILE=C:\\openSSLTest2\\.rnd && set OPENSSL_CONF=C:\\openSSLTest2\\openssl.cnf && openssl genrsa -out @{runtime.certificate.rootKeyFile} 4096 -config openssl.cnf && openssl req -new -out @{runtime.certificate.rootRequestFile} -key @{runtime.certificate.rootKeyFile} -config openssl.cnf -subj "/C=CN/ST=Beijing/L=Beijing/O=Beijing Huaxing Chenghui Cultural Development Co., Ltd./OU=Wen Cang/CN=@{runtime.certificate.rootUser}" && openssl x509 -req -in @{runtime.certificate.rootRequestFile} -out @{runtime.certificate.rootCertificateFile} -signkey @{runtime.certificate.rootKeyFile} -days @{runtime.certificate.rootValidDays} && openssl pkcs12 -export -clcerts -in @{runtime.certificate.rootCertificateFile} -inkey @{runtime.certificate.rootKeyFile} -passout pass:@{runtime.certificate.rootPassword} -out @{runtime.certificate.rootCertificateWithKeyPKCS12File}
certificate.validDays=365
certificate.createCommand=&&mkdir @{runtime.certificate.certificatePath} && cd C:\\openSSLTest2 && set RANDFILE=C:\\openSSLTest2\\.rnd && set OPENSSL_CONF=C:\\openSSLTest2\\openssl.cnf && openssl genrsa -out @{runtime.certificate.keyFile} 4096 -config openssl.cnf && openssl req -new -out @{runtime.certificate.requestFile} -key @{runtime.certificate.keyFile} -config openssl.cnf -subj "/C=CN/ST=Beijing/L=Beijing/O=Beijing Huaxing Chenghui Cultural Development Co., Ltd./OU=@{runtime.certificate.rootUser}/CN=@{runtime.certificate.user}" && openssl x509 -req -in @{runtime.certificate.requestFile} -out @{runtime.certificate.certificateFile} -signkey @{runtime.certificate.keyFile} -CA @{runtime.certificate.rootCertificateFile} -CAkey @{runtime.certificate.rootKeyFile} -CAcreateserial -days @{runtime.certificate.validDays} && openssl pkcs8 -topk8 -nocrypt -in @{runtime.certificate.keyFile} -out @{runtime.certificate.keyPKCS8File} && type @{runtime.certificate.keyPKCS8File} @{runtime.certificate.certificateFile} > @{runtime.certificate.certificateWithKeyPKCS8File} && openssl pkcs12 -export -clcerts -in @{runtime.certificate.certificateFile} -inkey @{runtime.certificate.keyFile} -passout pass:@{runtime.certificate.password} -out @{runtime.certificate.certificateWithKeyPKCS12File}