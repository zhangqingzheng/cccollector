/**
 * 
 */
package com.cccollector.app.view;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.ViewScoped;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;

import org.primefaces.event.FileUploadEvent;
import org.primefaces.model.DefaultStreamedContent;
import org.primefaces.model.StreamedContent;

import com.cccollector.app.model.Program;
import com.cccollector.app.model.Promotion;
import com.cccollector.app.service.ProgramService;
import com.cccollector.app.service.PromotionService;
import com.cccollector.universal.dao.QueryField;

/**
 * 推广Bean类
 *
 * @author 谢朋
 * Copyright © 2017年 北京华星成汇文化发展有限公司. All rights reserved.
 */
@ManagedBean
@ViewScoped
public class PromotionBean {

	/**
	 * 推广服务
	 */
	@ManagedProperty(value = "#{promotionService}")
	private PromotionService promotionService;

	public void setPromotionService(PromotionService _promotionService) {
		promotionService = _promotionService;
	}

	/**
	 * 推广方案服务
	 */
	@ManagedProperty(value = "#{programService}")
	private ProgramService programService;

	public void setProgramService(ProgramService _programService) {
		programService = _programService;
	}

	/**
	 * 推广ID
	 */
	private String promotionId;

	public String getPromotionId() {
		return promotionId;
	}

	public void setPromotionId(String _promotionId) {
		promotionId = _promotionId;

		// 新建或加载推广
		if (promotion == null) {
			Integer id = 0;
			try {
				id = Integer.valueOf(promotionId);
			} catch (Exception e) {}
			if (id == 0) {
				promotion = new Promotion();
				promotion.setVisible(true);
				if (program == null) {
					program = new Program();
				}
				promotion.setProgram(program);
			} else {
				promotion = promotionService.loadById(id);

				// 处理图标
				try {
					String filePath = promotionService.getDataPromotionsPath() + promotion.iconFilePath();
					if (new File(filePath).exists()) {
						iconFilePath = filePath;
						FileInputStream fileInputStream = new FileInputStream(iconFilePath);
						iconImage = new DefaultStreamedContent(fileInputStream, "image/png");
					}
				} catch (Exception e) {}
			}
		}
	}

	/**
	 * 推广
	 */
	private Promotion promotion;

	public Promotion getPromotion() {
		return promotion;
	}

	/**
	 * 所属推广方案ID
	 */
	private String programId;

	public String getProgramId() {
		return programId;
	}

	public void setProgramId(String _programId) {
		programId = _programId;

		// 加载推广方案
		Integer id = 0;
		try {
			id = Integer.valueOf(programId);
		} catch (Exception e) {}
		if (id != 0) {
			program = programService.loadById(id);
		}
	}

	/**
	 * 所属推广方案
	 */
	private Program program;

	public Program getProgram() {
		return program;
	}

	/**
	 * 图标文件路径
	 */
	private String iconFilePath;

	public String getIconFilePath() {
		return iconFilePath;
	}

	/**
	 * 图标图像
	 */
	private StreamedContent iconImage;

	public StreamedContent getIconImage() {
		return iconImage;
	}

	/**
	 * 处理图标上传
	 */
	public void handleIconFileUpload(FileUploadEvent fileUploadEvent) {
		try {
			new File(promotionService.getTempPath()).mkdirs();
			String tempFileName = new Date().getTime() + "_" + new Random().nextInt(10000) + ".png";
			iconFilePath = promotionService.getTempPath() + tempFileName;
			fileUploadEvent.getFile().write(iconFilePath);
			FileInputStream fileInputStream = new FileInputStream(iconFilePath);
			iconImage = new DefaultStreamedContent(fileInputStream, "image/png");
		} catch (Exception e) {
			iconFilePath = null;
			iconImage = null;
		}
	}

	/**
	 * 处理图标删除
	 */
	public void handleIconDelete(ActionEvent actionEvent) {
		iconFilePath = null;
		iconImage = null;
	}

	/**
	 * 保存
	 */
	public void saveAction() {
		// 置空
		if (promotion.getIntro().equals("")) {
			promotion.setIntro(null);
		}
		if (promotion.getRelativeBundleId().equals("")) {
			promotion.setRelativeBundleId(null);
		}

		FacesContext facesContext = FacesContext.getCurrentInstance();
		if (promotion.getPromotionId() == null) {
			// 设置排序位置
			List<QueryField> predicateQueryFieldList = new ArrayList<QueryField>();
			predicateQueryFieldList.add(new QueryField("program", new QueryField("programId", program.getProgramId())));
			Integer position = promotionService.max("position", predicateQueryFieldList);
			promotion.setPosition(position == null ? 0 : position.intValue() + 1);
			
			// 添加推广
			promotionService.save(promotion);
		} else {
			// 编辑推广
			promotionService.update(promotion);
		}

		// 处理图标文件
		File iconFile = new File(promotionService.getDataPromotionsPath() + promotion.iconFilePath());
		if (iconFilePath != null) {
			if (iconFilePath.startsWith(promotionService.getTempPath())) {
				File tempFile = new File(iconFilePath);
				iconFile.getParentFile().mkdirs();
				try {
					Files.copy(tempFile.toPath(), iconFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
					tempFile.delete();
					
					// 设置图标更新时间
					promotion.setIconUpdateTime(new Date());
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		} else {
			if (iconFile.exists()) {
				iconFile.delete();
			}
			
			// 设置图标更新时间
			promotion.setIconUpdateTime(null);
		}

		// 更新推广图标更新时间
		promotionService.update(promotion, "iconUpdateTime");

		// 清除nginx缓存文件
		File[] sizeFiles = new File(promotionService.getImagePath()).listFiles();
		if (sizeFiles != null) {
			for (File sizeFile : sizeFiles) {
				File pictureImageFile = new File(sizeFile, promotionService.getPromotionsPath() + promotion.iconFilePath());
				pictureImageFile.delete();
			}
		}
		
		try {
			facesContext.getExternalContext().redirect("promotionList.xhtml?multiSelect=true&programId=" + programId);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
