/**
 * 
 */
package com.cccollector.app.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.cccollector.universal.model.UniversalJsonViews;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonView;

/**
 * 应用类
 *
 * @author 谢朋
 * Copyright © 2017年 北京华星成汇文化发展有限公司. All rights reserved.
*/
@Entity
@Table(name = "app_apps")
public class App implements Serializable {

	private static final long serialVersionUID = -2770964830848905794L;
	
	private Integer _appId;

	/**
	 * 应用ID
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	public Integer getAppId() {
		return _appId;
	}

	public void setAppId(Integer appId) {
		_appId = appId;
	}

	private String _name;

	/**
	 * 名称
	 */
	@Column(nullable = false, length = 100)
	public String getName() {
		return _name;
	}

	public void setName(String name) {
		_name = name;
	}

	private String _bundleId;

	/**
	 * 标识符
	 */
	@Column(nullable = false, length = 100)
	public String getBundleId() {
		return _bundleId;
	}

	public void setBundleId(String bundleId) {
		_bundleId = bundleId;
	}

	private String _remarks;

	/**
	 * 备注
	 */
	@JsonIgnore
	@Column(nullable = true, length = 1000)
	public String getRemarks() {
		return _remarks;
	}

	public void setRemarks(String remarks) {
		_remarks = remarks;
	}

	private Boolean _enabled;

	/**
	 * 是否可用
	 */
	@JsonView(UniversalJsonViews.Back.class)
	@Column(nullable = false)
	public Boolean getEnabled() {
		return _enabled;
	}

	public void setEnabled(Boolean enabled) {
		_enabled = enabled;
	}

	/**
	 * 是否可用枚举
	 */
	public static enum EnabledEnum {
		否,
		是
	}

	/**
	 * 是否可用的枚举
	 */
	@JsonIgnore
	@Transient
	public EnabledEnum getEnabledEnum() {
		int index = _enabled ? 1 : 0;
		return EnabledEnum.values()[index];
	}

	private List<Platform> _platforms = new ArrayList<Platform>();

	/**
	 * 关联的平台
	 */
	@JsonView(UniversalJsonViews.Front.class)
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "plat_platformApps", joinColumns = @JoinColumn(name = "appId", nullable = false), inverseJoinColumns = @JoinColumn(name = "platformId", nullable = false))
	@OrderBy("name")
	public List<Platform> getPlatforms() {
		return _platforms;
	}

	public void setPlatforms(List<Platform> platforms) {
		_platforms = platforms;
	}	
	
	private List<Edition> _editions = new ArrayList<Edition>();

	/**
	 * 包含的版本
	 */
	@JsonView(UniversalJsonViews.Back.class)
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "app")
	@OrderBy("osType, os")
	public List<Edition> getEditions() {
		return _editions;
	}

	public void setEditions(List<Edition> editions) {
		_editions = editions;
	}
}
